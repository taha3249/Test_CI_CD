name: Build ðŸŽ®

on: push

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}

jobs:
  checkLicense:
    name: Check for Unity Licence
    runs-on: ubuntu-latest
    steps:
        - name: Fail - No License
          if: ${{ !startsWith(env.UNITY_LICENSE, '<') }}
          run: exit 1
          
  buildForAllSupportedPlatforms:
    needs: checkLicense
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          #- iOS # Build an iOS player.
          - Android # Build an Android .apk standalone app.
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{matrix.targetPlatform}}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v4
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v3
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
